set nocompatible

" Syntax highlighting
if has('syntax') && (&t_Co > 2 || has('win32') || has('gui_running'))
    syntax on

    if &term == "xterm-256color"
        set t_Co=256
    endif
endif

set encoding=utf-8
set lazyredraw
set showmode
set scrolloff=4
" Use desert for console vim, gvim color theme is chosen later
colorscheme desert

" Ruler
if has('cmdline_info')
    set ruler
    set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%)
    set showcmd
endif

" Status line
if has('statusline')
    set laststatus=2
    set statusline=%<%f\ %=\:\b%n\[%{strlen(&ft)?&ft:'none'}/%{&encoding}/%{&fileformat}]%m%r%w\ %l,%c%V\ %P
endif

set wildmenu
set wildmode=list:longest,full
filetype on
set autoindent
set backspace=indent,eol,start
set shiftwidth=4
set softtabstop=4
set tabstop=4
set smarttab
set expandtab
set smartindent
set wildignore=*.pyc,*.o,*.obj,*.swp

" Fix search
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set incsearch
set showmatch
set hlsearch

" Long line support
set wrap
set formatoptions=qrn1

if has('gui_running')
    set guioptions-=T          " remove the toolbar
    if has("mac")
        set guifont=Monaco:h12
    elseif has("unix")
        set guifont=Monospace\ 12
    elseif has("win32") || has("win64")
        set guifont=Consolas:h11:cANSI
    endif
    try
        colorscheme phd
    catch
        try
            colorscheme twilight
        catch
        endtry
    endtry
endif

set backupdir=~/.vim/backup/
set directory=~/.vim/backup/

au! BufRead,BufNewFile *.json setfiletype json
autocmd FileType python call <SID>pystuff()
function <SID>pystuff()
    set foldmethod=indent
    set foldlevel=99999
    set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class,with
endfunction

autocmd FileType make set noexpandtab

set listchars=tab:â–¸\ ,trail:~
set list

set autoread
set fileformats+=mac " Automatically open stupid mac files

" window splitting functions
map <c-space> <c-w>v
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Cripple yourself
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk
